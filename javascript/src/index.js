/**
 * Squash Matrix API
 * # Endeavor The squash matrix API enables clubs, players, and regions to own their information, with results being updated weekly. The API information sits ontop of squash matrix australia website [https://squashmatrix.com](https://squashmatrix.com) # API Aside from the documentation provided below, there is also a `{json:api}` available and can be accessed in the same manner, with the addition of the accept header `{accept: application/vnd.api+json}`. More information about json api can be viewed on their website at [http://jsonapi.org/](http://jsonapi.org/) # Squash Matrix Scrapper There is a ruby SDK for retrieving information from [https://squashmatrix.com](https://squashmatrix.com) which can be found at https://rubygems.org/gems/squash_matrix # SDK's Please stay posted! Client sdk's for the following will be provided shortly:    - Javascript   - Java   - Ruby  # Blog Find relevent and interesting media on [wilkosz.com.au](http://wilkosz.com.au) # Contact Join this endeavor and be appart of the community [https://www.facebook.com/squashmatrixapi](https://www.facebook.com/squashmatrixapi) <hr />
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiResponseErrors from './SquashMatrixClientModel/ApiResponseErrors';
import ApiResponseErrorsErrors from './SquashMatrixClientModel/ApiResponseErrorsErrors';
import Club from './SquashMatrixClientModel/Club';
import Game from './SquashMatrixClientModel/Game';
import InlineResponse200 from './SquashMatrixClientModel/InlineResponse200';
import InlineResponse2001 from './SquashMatrixClientModel/InlineResponse2001';
import InlineResponse2002 from './SquashMatrixClientModel/InlineResponse2002';
import InlineResponse2003 from './SquashMatrixClientModel/InlineResponse2003';
import InlineResponse2004 from './SquashMatrixClientModel/InlineResponse2004';
import InlineResponse2005 from './SquashMatrixClientModel/InlineResponse2005';
import Player from './SquashMatrixClientModel/Player';
import DefaultApi from './SquashMatrixClientAPI/DefaultApi';


/**
* # Endeavor The squash matrix API enables clubs, players, and regions to own their information, with results being updated weekly. The API information sits ontop of squash matrix australia website [https://squashmatrix.com](https://squashmatrix.com) # API Aside from the documentation provided below, there is also a &#x60;{json:api}&#x60; available and can be accessed in the same manner, with the addition of the accept header &#x60;{accept: application/vnd.api+json}&#x60;. More information about json api can be viewed on their website at [http://jsonapi.org/](http://jsonapi.org/) # Squash Matrix Scrapper There is a ruby SDK for retrieving information from [https://squashmatrix.com](https://squashmatrix.com) which can be found at https://rubygems.org/gems/squash_matrix # SDK&#39;s Please stay posted! Client sdk&#39;s for the following will be provided shortly:    - Javascript   - Java   - Ruby  # Blog Find relevent and interesting media on [wilkosz.com.au](http://wilkosz.com.au) # Contact Join this endeavor and be appart of the community [https://www.facebook.com/squashmatrixapi](https://www.facebook.com/squashmatrixapi) &lt;hr /&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SquashMatrixApi = require('SquashMatrixClient/index'); // See note below*.
* var xxxSvc = new SquashMatrixApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SquashMatrixApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['SquashMatrixClient/index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SquashMatrixApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SquashMatrixApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module SquashMatrixClient/index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:SquashMatrixClient/ApiClient}
     */
    ApiClient,

    /**
     * The ApiResponseErrors model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/ApiResponseErrors}
     */
    ApiResponseErrors,

    /**
     * The ApiResponseErrorsErrors model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/ApiResponseErrorsErrors}
     */
    ApiResponseErrorsErrors,

    /**
     * The Club model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/Club}
     */
    Club,

    /**
     * The Game model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/Game}
     */
    Game,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse2003 model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/InlineResponse2003}
     */
    InlineResponse2003,

    /**
     * The InlineResponse2004 model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/InlineResponse2004}
     */
    InlineResponse2004,

    /**
     * The InlineResponse2005 model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/InlineResponse2005}
     */
    InlineResponse2005,

    /**
     * The Player model constructor.
     * @property {module:SquashMatrixClient/SquashMatrixClientModel/Player}
     */
    Player,

    /**
    * The DefaultApi service constructor.
    * @property {module:SquashMatrixClient/SquashMatrixClientAPI/DefaultApi}
    */
    DefaultApi
};
