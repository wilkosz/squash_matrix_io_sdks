/**
 * Squash Matrix API
 * # Endeavor The squash matrix API enables clubs, players, and regions to own their information, with results being updated weekly. The API information sits ontop of squash matrix australia website [https://squashmatrix.com](https://squashmatrix.com) # API Aside from the documentation provided below, there is also a `{json:api}` available and can be accessed in the same manner, with the addition of the accept header `{accept: application/vnd.api+json}`. More information about json api can be viewed on their website at [http://jsonapi.org/](http://jsonapi.org/) # Squash Matrix Scrapper There is a ruby SDK for retrieving information from [https://squashmatrix.com](https://squashmatrix.com) which can be found at https://rubygems.org/gems/squash_matrix # SDK's Please stay posted! Client sdk's for the following will be provided shortly:    - Javascript   - Java   - Ruby  # Blog Find relevent and interesting media on [wilkosz.com.au](http://wilkosz.com.au) # Contact Join this endeavor and be appart of the community [https://www.facebook.com/squashmatrixapi](https://www.facebook.com/squashmatrixapi) <hr />
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The Game model module.
* @module SquashMatrixClient/SquashMatrixClientModel/Game
* @version 1.0.0
*/
export default class Game {
    /**
    * Constructs a new <code>Game</code>.
    * @alias module:SquashMatrixClient/SquashMatrixClientModel/Game
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>Game</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:SquashMatrixClient/SquashMatrixClientModel/Game} obj Optional instance to populate.
    * @return {module:SquashMatrixClient/SquashMatrixClientModel/Game} The populated <code>Game</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Game();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('division')) {
                obj['division'] = ApiClient.convertToType(data['division'], 'String');
            }
            if (data.hasOwnProperty('event')) {
                obj['event'] = ApiClient.convertToType(data['event'], 'String');
            }
            if (data.hasOwnProperty('round')) {
                obj['round'] = ApiClient.convertToType(data['round'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'String');
            }
            if (data.hasOwnProperty('player_a_name')) {
                obj['player_a_name'] = ApiClient.convertToType(data['player_a_name'], 'String');
            }
            if (data.hasOwnProperty('player_b_name')) {
                obj['player_b_name'] = ApiClient.convertToType(data['player_b_name'], 'String');
            }
            if (data.hasOwnProperty('player_a_id')) {
                obj['player_a_id'] = ApiClient.convertToType(data['player_a_id'], 'Number');
            }
            if (data.hasOwnProperty('player_b_id')) {
                obj['player_b_id'] = ApiClient.convertToType(data['player_b_id'], 'Number');
            }
            if (data.hasOwnProperty('player_a_points')) {
                obj['player_a_points'] = ApiClient.convertToType(data['player_a_points'], 'Number');
            }
            if (data.hasOwnProperty('player_b_points')) {
                obj['player_b_points'] = ApiClient.convertToType(data['player_b_points'], 'Number');
            }
            if (data.hasOwnProperty('player_a_games')) {
                obj['player_a_games'] = ApiClient.convertToType(data['player_a_games'], 'Number');
            }
            if (data.hasOwnProperty('player_b_games')) {
                obj['player_b_games'] = ApiClient.convertToType(data['player_b_games'], 'Number');
            }
            if (data.hasOwnProperty('player_a_rating')) {
                obj['player_a_rating'] = ApiClient.convertToType(data['player_a_rating'], 'Number');
            }
            if (data.hasOwnProperty('player_b_rating')) {
                obj['player_b_rating'] = ApiClient.convertToType(data['player_b_rating'], 'Number');
            }
            if (data.hasOwnProperty('player_a_rating_adjustment')) {
                obj['player_a_rating_adjustment'] = ApiClient.convertToType(data['player_a_rating_adjustment'], 'Number');
            }
            if (data.hasOwnProperty('player_b_rating_adjustment')) {
                obj['player_b_rating_adjustment'] = ApiClient.convertToType(data['player_b_rating_adjustment'], 'Number');
            }
            if (data.hasOwnProperty('match_id')) {
                obj['match_id'] = ApiClient.convertToType(data['match_id'], 'Number');
            }
        }
        return obj;
    }

    /**
    * @member {Number} id
    */
    id = undefined;
    /**
    * @member {Date} date
    */
    date = undefined;
    /**
    * @member {String} division
    */
    division = undefined;
    /**
    * @member {String} event
    */
    event = undefined;
    /**
    * @member {String} round
    */
    round = undefined;
    /**
    * @member {String} position
    */
    position = undefined;
    /**
    * @member {String} player_a_name
    */
    player_a_name = undefined;
    /**
    * @member {String} player_b_name
    */
    player_b_name = undefined;
    /**
    * Player association
    * @member {Number} player_a_id
    */
    player_a_id = undefined;
    /**
    * Player association
    * @member {Number} player_b_id
    */
    player_b_id = undefined;
    /**
    * @member {Number} player_a_points
    */
    player_a_points = undefined;
    /**
    * @member {Number} player_b_points
    */
    player_b_points = undefined;
    /**
    * @member {Number} player_a_games
    */
    player_a_games = undefined;
    /**
    * @member {Number} player_b_games
    */
    player_b_games = undefined;
    /**
    * @member {Number} player_a_rating
    */
    player_a_rating = undefined;
    /**
    * @member {Number} player_b_rating
    */
    player_b_rating = undefined;
    /**
    * @member {Number} player_a_rating_adjustment
    */
    player_a_rating_adjustment = undefined;
    /**
    * @member {Number} player_b_rating_adjustment
    */
    player_b_rating_adjustment = undefined;
    /**
    * Squash Matrix mathch id
    * @member {Number} match_id
    */
    match_id = undefined;








}


